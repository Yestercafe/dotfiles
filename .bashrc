export LANG="en_US.UTF-8"
export TERM=xterm-256color
export EDITOR="nvim"
export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890

# PS1
# generated by https://ezprompt.net/
# get current branch in git repo
function parse_git_branch() {
  BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
  if [ ! "${BRANCH}" == "" ]
  then
    STAT=`parse_git_dirty`
    echo " [${BRANCH}${STAT}]"
  else
    echo ""
  fi
}

# get current status of git repo
function parse_git_dirty {
  status=`git status 2>&1 | tee`
  dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
  untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
  ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
  newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
  renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
  deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
  bits=''
  if [ "${renamed}" == "0" ]; then
    bits=">${bits}"
  fi
  if [ "${ahead}" == "0" ]; then
    bits="*${bits}"
  fi
  if [ "${newfile}" == "0" ]; then
    bits="+${bits}"
  fi
  if [ "${untracked}" == "0" ]; then
    bits="?${bits}"
  fi
  if [ "${deleted}" == "0" ]; then
    bits="x${bits}"
  fi
  if [ "${dirty}" == "0" ]; then
    bits="!${bits}"
  fi
  if [ ! "${bits}" == "" ]; then
    echo "${bits}"
  else
    echo ""
  fi
}

export PS1="\u@\h:\w\`parse_git_branch\` \$ "

# local variables
DOTFILES=$HOME/.dotfiles

# functions
function mcd() {
  mkdir -p "$@" && cd "$_";
}

function nh () {
  nohup $* > /dev/null &
}

function f() {
  find . -iname "*$1*" ${@:2}
}

function r() {
  grep "$1" ${@:2} -R .
}

# conda init
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/ivan/opt/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
  eval "$__conda_setup"
else
  if [ -f "/Users/ivan/opt/miniconda3/etc/profile.d/conda.sh" ]; then
    . "/Users/ivan/opt/miniconda3/etc/profile.d/conda.sh"
  else
    export PATH="/Users/ivan/opt/miniconda3/bin:$PATH"
  fi
fi
unset __conda_setup
# <<< conda initialize <<<
# thefuck
command -v thefuck >/dev/null 2>&1 && eval $(thefuck --alias)
# cms-git-tools
export PATH=$DOTFILES/cms-git-tools:$PATH
# user scripts
export PATH=$HOME/.local/bin:$DOTFILES/bin:/usr/local/bin:/usr/local/sbin:$PATH

# alias
alias q=$EDITOR
if [[ $OSTYPE == darwin* ]]; then
  command -v gcc-13 >/dev/null 2>&1 && alias gcc="gcc-13"
  command -v g++-13 >/dev/null 2>&1 && alias g++="g++-13"
fi
command -v joshuto >/dev/null 2>&1 && alias ra=joshuto   # NTR here
if [[ $OSTYPE == darwin* ]]; then
  command -v gls >/dev/null 2>&1 && alias ls=gls
fi
if command -v exa >/dev/null 2>&1; then
  alias ls="exa --color=auto --group-directories-first"
  alias la='ls -laFh'
fi
alias ll="ls -l"
command -v btm >/dev/null 2>&1 && alias top=btm
command -v ripgrep >/dev/null 2>&1 && alias grep=ripgrep
command -v bat >/dev/null 2>&1 && alias cat="bat -p --wrap character"

# GCC/Clang/Makefile/CMake
export PATH=/usr/local/opt/riscv-gnu-toolchain/bin:$PATH
export PATH=/usr/local/Cellar/i386-jos-elf-gcc/4.6.1/bin:/usr/local/Cellar/i386-jos-elf-binutils/2.21.1/bin:/usr/local/Cellar/i386-jos-elf-gdb/7.3.1/bin:$PATH
export LDFLAGS="-L/usr/local/lib"
export CPPFLAGS="-I/usr/local/include"
alias make_by_gcc="export CC=/usr/local/bin/gcc-13;export CXX=/usr/local/bin/g++-13;export CMAKE_C_COMPILER=/usr/local/bin/gcc-12;export CMAKE_CXX_COMPILER=/usr/local/bin/g++-13"
alias make_by_clang="export CC=/usr/bin/clang;export CXX=/usr/bin/clang++;export CMAKE_C_COMPILER=/usr/bin/local/clang;export CMAKE_CXX_COMPILER=/usr/bin/local/clang++"

# Typora
alias typora="open -a typora"

# RVM
export PATH="$HOME/.rvm/bin:$PATH"

# MySQL
export PATH=/usr/local/mysql/bin:$PATH

# Python binary files
export PATH=/Users/ivan/Library/Python/3.9/bin:$PATH
export PATH=/Users/ivan/Library/Python/3.8/bin:$PATH
export PATH=/usr/local/Cellar/python@3.9/3.9.12_1/bin:$PATH

# LLVM
export PATH=/usr/local/opt/llvm/bin:$PATH

# Go
export PATH=$HOME/opt/go1.19/bin:$PATH
export PATH=$HOME/go/bin:$PATH

# JDK
#export PATH=$HOME/opt/jdk-16.0.2.jdk/Contents/Home/bin:$PATH
export PATH=$HOME/opt/jdk-17.0.1.jdk/Contents/Home/bin:$PATH

# Doom Emacs
export PATH=$HOME/.emacs.d/bin:$PATH

# iTerm2 shell integration
if [[ "$TERM_PROGRAM" == "iTerm.app" ]]; then
  test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
fi

# GHCup bins
export PATH=$HOME/.ghcup/bin:$PATH

# Cabal bins
export PATH=$HOME/.cabal/bin:$PATH

# Coq
export PATH=/Applications/CoqIDE.app/Contents/Resources/bin:$PATH

# cpt
function scpp () {
  cp ~/learning/algorithm/vjudge/_snips/snip.cpp $*
}
function sgo () {
  cp ~/learning/algorithm/vjudge/_snips/snip.go $*
}

# tmux
alias t=tmux
function tn () {
  if [ "$#" -eq 0 ]; then
    tmux new
  else
    tmux new -s $*
  fi
}

function ta () {
  if [ "$#" -eq 0 ]; then
    tmux a
  else
    tmux a -t $*
  fi
}

# add mason automatically installed LS into PATH
export PATH=$HOME/.local/share/nvim/mason/bin:$PATH

